[
    {
        "id": "ca64878d00b0b8d5",
        "type": "tab",
        "label": "Device05",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2c405e1cdee23cc1",
        "type": "file in",
        "z": "ca64878d00b0b8d5",
        "name": "MP10",
        "filename": "/var/snap/node-red/common/data/device_05/cetesb_cubatao-parisi_mp10_2024.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 490,
        "y": 80,
        "wires": [
            [
                "595c4704e8c50941"
            ]
        ]
    },
    {
        "id": "2df1b5babbc7a221",
        "type": "file in",
        "z": "ca64878d00b0b8d5",
        "name": "MP2.5",
        "filename": "/var/snap/node-red/common/data/device_05/cetesb_cubatao-centro_mp25_2024.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 490,
        "y": 160,
        "wires": [
            [
                "c70a18300f495911"
            ]
        ]
    },
    {
        "id": "b6a5dd918e45400d",
        "type": "file in",
        "z": "ca64878d00b0b8d5",
        "name": "O3",
        "filename": "/var/snap/node-red/common/data/device_05/cetesb_cubatao-centro_o3_2024.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 490,
        "y": 240,
        "wires": [
            [
                "6145447d91d230f0"
            ]
        ]
    },
    {
        "id": "5ae5ca4474642c14",
        "type": "file in",
        "z": "ca64878d00b0b8d5",
        "name": "NO2",
        "filename": "/var/snap/node-red/common/data/device_05/cetesb_cubatao-parisi_no2_2024.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 490,
        "y": 320,
        "wires": [
            [
                "a04943e43c10c563"
            ]
        ]
    },
    {
        "id": "740f3c210eed631e",
        "type": "file in",
        "z": "ca64878d00b0b8d5",
        "name": "SO2",
        "filename": "/var/snap/node-red/common/data/device_05/cetesb_cubatao-parisi_so2_2024.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 490,
        "y": 400,
        "wires": [
            [
                "2b6348f49bbd85f5"
            ]
        ]
    },
    {
        "id": "54e6d8fe072e2c80",
        "type": "file in",
        "z": "ca64878d00b0b8d5",
        "name": "CO",
        "filename": "/var/snap/node-red/common/data/device_05/cetesb_sao-bernado_co_2024.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 490,
        "y": 480,
        "wires": [
            [
                "849db56fdfa712b9"
            ]
        ]
    },
    {
        "id": "2f9d74e8cdc99625",
        "type": "file in",
        "z": "ca64878d00b0b8d5",
        "name": "Temperatura",
        "filename": "/var/snap/node-red/common/data/device_05/cetesb_cubatao-vale-mogi_temperature_2024.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 510,
        "y": 560,
        "wires": [
            [
                "e9494e6e16777eec"
            ]
        ]
    },
    {
        "id": "856f9afc1229159c",
        "type": "file in",
        "z": "ca64878d00b0b8d5",
        "name": "Umidade do Ar",
        "filename": "/var/snap/node-red/common/data/device_05/cetesb_santos_humidity_2024.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 520,
        "y": 640,
        "wires": [
            [
                "8092014edee7e0b1"
            ]
        ]
    },
    {
        "id": "338a6e630931eaf3",
        "type": "file in",
        "z": "ca64878d00b0b8d5",
        "name": "Pressão",
        "filename": "/var/snap/node-red/common/data/device_05/cetesb_santos_pressure_2024.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 500,
        "y": 720,
        "wires": [
            [
                "45b8b25b3ae6f9ed"
            ]
        ]
    },
    {
        "id": "54ad8a363bc03be9",
        "type": "function",
        "z": "ca64878d00b0b8d5",
        "name": "Device05",
        "func": "// ===== Metadados estáticos do dispositivo =====\nconst DEVICE_META = {\n    deviceId: \"Device05\", // ID único do dispositivo\n    station: \"Hospital Giselda Trigueiro\", // Nome da estação\n    lat: -5.797181720435641, // Latitude e Longitude do dispositivo\n    lon: -35.226140634915325,   // cuidado com espaços antes do número!\n    model: \"Node-RED\", // Modelo do dispositivo\n    fw_version: \"v3.1.0\" // Versão do firmware\n};\n\n// ===== Mapeamento nomes reais -> padronizados =====\nconst mapSensor = {\n    \"mp10\": \"pm10\",\n    \"mp2\": \"pm25\",\n    \"o3\": \"o3\",\n    \"no2\": \"no2\",\n    \"so2\": \"so2\",\n    \"co\": \"co\",\n    \"temp\": \"temperatura\",\n    \"ur\": \"umidade\",\n    \"press\": \"pressao\"\n};\n\nconst sensoresEsperados = Object.values(mapSensor);\n\n// Buffer por timestamp no flow context\nlet buffer = flow.get(\"sensorBuffer\") || {};\n\nconst dado = msg.payload;\nconst ts = dado.timestamp;                // ISO8601/epoch conforme sua entrada\nconst nomeSensor = mapSensor[dado.sensor];\n\nif (!nomeSensor) return null; // ignora sensores desconhecidos\n\n// Cria bucket do timestamp se necessário\nif (!buffer[ts]) buffer[ts] = {};\n\n// Armazena valor padronizado\nbuffer[ts][nomeSensor] = dado.valor;\nflow.set(\"sensorBuffer\", buffer);\n\n// Verifica se todos os sensores chegaram\nconst sensoresPresentes = Object.keys(buffer[ts]);\nconst todosPresentes = sensoresEsperados.every(s => sensoresPresentes.includes(s));\n\nif (todosPresentes) {\n    // Payload final: metadados + geolocalização + timestamp + leituras\n    const payloadFinal = {\n        // --- metadados (topo) ---\n        deviceId: DEVICE_META.deviceId,\n        station: DEVICE_META.station,\n        lat: Number(DEVICE_META.lat),\n        lon: Number(DEVICE_META.lon),\n        model: DEVICE_META.model,\n        fw_version: DEVICE_META.fw_version,\n        // --- tempo ---\n        timestamp: ts\n    };\n\n    // Leituras (flatten para facilitar consumo / Grafana)\n    sensoresEsperados.forEach(s => {\n        payloadFinal[s] = buffer[ts][s] ?? null;\n    });\n\n    // Limpa o bucket do timestamp\n    delete buffer[ts];\n    flow.set(\"sensorBuffer\", buffer);\n\n    // Playload pronto para envio\n    msg.payload = payloadFinal;\n    msg.qos = 1;        // opcional\n    msg.retain = false;    // telemetria normalmente não é retida\n    return msg;\n}\n\n// Ainda aguardando outros sensores desse timestamp\nreturn null;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nflow.set(\"index\", 0);\nflow.set(\"buffers\", {});\n\n",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 400,
        "wires": [
            [
                "6e29819a72ad9e34",
                "2a11ed7bb655324c"
            ]
        ]
    },
    {
        "id": "6e29819a72ad9e34",
        "type": "mqtt out",
        "z": "ca64878d00b0b8d5",
        "name": "MQTT Client - Publish Telemetria",
        "topic": "airq/devices/device05/telemetria",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f0c9616a1a5e025a",
        "x": 1780,
        "y": 400,
        "wires": []
    },
    {
        "id": "595c4704e8c50941",
        "type": "json",
        "z": "ca64878d00b0b8d5",
        "name": "Converter JSON → Array",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 750,
        "y": 80,
        "wires": [
            [
                "1fb92eb743c55d05"
            ]
        ]
    },
    {
        "id": "1fb92eb743c55d05",
        "type": "split",
        "z": "ca64878d00b0b8d5",
        "name": "Separar objetos",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 970,
        "y": 80,
        "wires": [
            [
                "28d7b893fb36455b"
            ]
        ]
    },
    {
        "id": "28d7b893fb36455b",
        "type": "delay",
        "z": "ca64878d00b0b8d5",
        "name": "Enviar a cada 60s",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "60",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1210,
        "y": 80,
        "wires": [
            [
                "54ad8a363bc03be9"
            ]
        ]
    },
    {
        "id": "c56fcaa0585fdfd9",
        "type": "inject",
        "z": "ca64878d00b0b8d5",
        "name": "Iniciar simulação",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 400,
        "wires": [
            [
                "2c405e1cdee23cc1",
                "2df1b5babbc7a221",
                "b6a5dd918e45400d",
                "5ae5ca4474642c14",
                "740f3c210eed631e",
                "54e6d8fe072e2c80",
                "2f9d74e8cdc99625",
                "856f9afc1229159c",
                "338a6e630931eaf3"
            ]
        ]
    },
    {
        "id": "c70a18300f495911",
        "type": "json",
        "z": "ca64878d00b0b8d5",
        "name": "Converter JSON → Array",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 750,
        "y": 160,
        "wires": [
            [
                "e9ecdbaa8f322145"
            ]
        ]
    },
    {
        "id": "e9ecdbaa8f322145",
        "type": "split",
        "z": "ca64878d00b0b8d5",
        "name": "Separar objetos",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 960,
        "y": 160,
        "wires": [
            [
                "48afaf7e07bcf8e1"
            ]
        ]
    },
    {
        "id": "48afaf7e07bcf8e1",
        "type": "delay",
        "z": "ca64878d00b0b8d5",
        "name": "Enviar a cada 60s",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "60",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1210,
        "y": 160,
        "wires": [
            [
                "54ad8a363bc03be9"
            ]
        ]
    },
    {
        "id": "6145447d91d230f0",
        "type": "json",
        "z": "ca64878d00b0b8d5",
        "name": "Converter JSON → Array",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 750,
        "y": 240,
        "wires": [
            [
                "8c891133f5a199be"
            ]
        ]
    },
    {
        "id": "8c891133f5a199be",
        "type": "split",
        "z": "ca64878d00b0b8d5",
        "name": "Separar objetos",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 960,
        "y": 240,
        "wires": [
            [
                "877c2145a16b91d8"
            ]
        ]
    },
    {
        "id": "877c2145a16b91d8",
        "type": "delay",
        "z": "ca64878d00b0b8d5",
        "name": "Enviar a cada 60s",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "60",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1210,
        "y": 240,
        "wires": [
            [
                "54ad8a363bc03be9"
            ]
        ]
    },
    {
        "id": "a04943e43c10c563",
        "type": "json",
        "z": "ca64878d00b0b8d5",
        "name": "Converter JSON → Array",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 750,
        "y": 320,
        "wires": [
            [
                "923a2e6197fcdaed"
            ]
        ]
    },
    {
        "id": "923a2e6197fcdaed",
        "type": "split",
        "z": "ca64878d00b0b8d5",
        "name": "Separar objetos",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 960,
        "y": 320,
        "wires": [
            [
                "42d3ee50d91b947b"
            ]
        ]
    },
    {
        "id": "42d3ee50d91b947b",
        "type": "delay",
        "z": "ca64878d00b0b8d5",
        "name": "Enviar a cada 60s",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "60",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1210,
        "y": 320,
        "wires": [
            [
                "54ad8a363bc03be9"
            ]
        ]
    },
    {
        "id": "2b6348f49bbd85f5",
        "type": "json",
        "z": "ca64878d00b0b8d5",
        "name": "Converter JSON → Array",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 750,
        "y": 400,
        "wires": [
            [
                "566ffc7f6ee9085d"
            ]
        ]
    },
    {
        "id": "566ffc7f6ee9085d",
        "type": "split",
        "z": "ca64878d00b0b8d5",
        "name": "Separar objetos",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 960,
        "y": 400,
        "wires": [
            [
                "f8cbaedd1c401f6f"
            ]
        ]
    },
    {
        "id": "f8cbaedd1c401f6f",
        "type": "delay",
        "z": "ca64878d00b0b8d5",
        "name": "Enviar a cada 60s",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "60",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1210,
        "y": 400,
        "wires": [
            [
                "54ad8a363bc03be9"
            ]
        ]
    },
    {
        "id": "849db56fdfa712b9",
        "type": "json",
        "z": "ca64878d00b0b8d5",
        "name": "Converter JSON → Array",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 750,
        "y": 480,
        "wires": [
            [
                "03dbf9381a370fae"
            ]
        ]
    },
    {
        "id": "03dbf9381a370fae",
        "type": "split",
        "z": "ca64878d00b0b8d5",
        "name": "Separar objetos",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 960,
        "y": 480,
        "wires": [
            [
                "c34611587cad99c6"
            ]
        ]
    },
    {
        "id": "c34611587cad99c6",
        "type": "delay",
        "z": "ca64878d00b0b8d5",
        "name": "Enviar a cada 60s",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "60",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1210,
        "y": 480,
        "wires": [
            [
                "54ad8a363bc03be9"
            ]
        ]
    },
    {
        "id": "e9494e6e16777eec",
        "type": "json",
        "z": "ca64878d00b0b8d5",
        "name": "Converter JSON → Array",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 750,
        "y": 560,
        "wires": [
            [
                "ea14ea71935168e0"
            ]
        ]
    },
    {
        "id": "ea14ea71935168e0",
        "type": "split",
        "z": "ca64878d00b0b8d5",
        "name": "Separar objetos",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 980,
        "y": 560,
        "wires": [
            [
                "50d8ec3163f42ed9"
            ]
        ]
    },
    {
        "id": "50d8ec3163f42ed9",
        "type": "delay",
        "z": "ca64878d00b0b8d5",
        "name": "Enviar a cada 60s",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "60",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1210,
        "y": 560,
        "wires": [
            [
                "54ad8a363bc03be9"
            ]
        ]
    },
    {
        "id": "8092014edee7e0b1",
        "type": "json",
        "z": "ca64878d00b0b8d5",
        "name": "Converter JSON → Array",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 750,
        "y": 640,
        "wires": [
            [
                "f91bed6580627b1e"
            ]
        ]
    },
    {
        "id": "f91bed6580627b1e",
        "type": "split",
        "z": "ca64878d00b0b8d5",
        "name": "Separar objetos",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 980,
        "y": 640,
        "wires": [
            [
                "661d96cefbcacf3e"
            ]
        ]
    },
    {
        "id": "661d96cefbcacf3e",
        "type": "delay",
        "z": "ca64878d00b0b8d5",
        "name": "Enviar a cada 60s",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "60",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1210,
        "y": 640,
        "wires": [
            [
                "54ad8a363bc03be9"
            ]
        ]
    },
    {
        "id": "45b8b25b3ae6f9ed",
        "type": "json",
        "z": "ca64878d00b0b8d5",
        "name": "Converter JSON → Array",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 750,
        "y": 720,
        "wires": [
            [
                "d5bb1863a4036a2f"
            ]
        ]
    },
    {
        "id": "d5bb1863a4036a2f",
        "type": "split",
        "z": "ca64878d00b0b8d5",
        "name": "Separar objetos",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 980,
        "y": 720,
        "wires": [
            [
                "8d0da730024fc561"
            ]
        ]
    },
    {
        "id": "8d0da730024fc561",
        "type": "delay",
        "z": "ca64878d00b0b8d5",
        "name": "Enviar a cada 60s",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "60",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1210,
        "y": 720,
        "wires": [
            [
                "54ad8a363bc03be9"
            ]
        ]
    },
    {
        "id": "2a11ed7bb655324c",
        "type": "debug",
        "z": "ca64878d00b0b8d5",
        "d": true,
        "name": "Payload - device 05",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1730,
        "y": 300,
        "wires": []
    },
    {
        "id": "f0c9616a1a5e025a",
        "type": "mqtt-broker",
        "name": "mqtt-client-device05",
        "broker": "10.33.33.10",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    }
]